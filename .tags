!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BODY_WIDTH	html2text/html2text.py	/^BODY_WIDTH = 78$/;"	v
ESCAPE_SNOB	html2text/html2text.py	/^ESCAPE_SNOB = 0$/;"	v
GOOGLE_LIST_INDENT	html2text/html2text.py	/^GOOGLE_LIST_INDENT = 36$/;"	v
HTML2Text	html2text/html2text.py	/^class HTML2Text(HTMLParser.HTMLParser):$/;"	c
HTMLParser	html2text/html2text.py	/^    import HTMLParser$/;"	i
HTMLParser	html2text/html2text.py	/^    import html.parser as HTMLParser$/;"	i
IGNORE_ANCHORS	html2text/html2text.py	/^IGNORE_ANCHORS = False$/;"	v
IGNORE_EMPHASIS	html2text/html2text.py	/^IGNORE_EMPHASIS = False$/;"	v
IGNORE_IMAGES	html2text/html2text.py	/^IGNORE_IMAGES = False$/;"	v
INLINE_LINKS	html2text/html2text.py	/^INLINE_LINKS = True$/;"	v
LINKS_EACH_PARAGRAPH	html2text/html2text.py	/^LINKS_EACH_PARAGRAPH = 0$/;"	v
SKIP_INTERNAL_LINKS	html2text/html2text.py	/^SKIP_INTERNAL_LINKS = True$/;"	v
UNICODE_SNOB	html2text/html2text.py	/^UNICODE_SNOB = 0$/;"	v
__author__	html2text/html2text.py	/^__author__ = "Aaron Swartz (me@aaronsw.com)"$/;"	v
__contributors__	html2text/html2text.py	/^__contributors__ = ["Martin 'Joey' Schulze", "Ricardo Reyes", "Kevin Jay North"]$/;"	v
__copyright__	html2text/html2text.py	/^__copyright__ = "(C) 2004-2008 Aaron Swartz. GNU GPL 3."$/;"	v
__init__	html2text/html2text.py	/^    def __init__(self, out=None, baseurl=''):$/;"	m	class:HTML2Text
__version__	html2text/html2text.py	/^__version__ = "3.200.3"$/;"	v
argparse	bbid.py	/^import argparse$/;"	i
args	bbid.py	/^    args = parser.parse_args()$/;"	v
author	html2text/setup.py	/^   author = "Aaron Swartz",$/;"	v
author_email	html2text/setup.py	/^   author_email = "me@aaronsw.com",$/;"	v
backup_history	bbid.py	/^def backup_history(*args):$/;"	f
charref	html2text/html2text.py	/^    def charref(self, name):$/;"	m	class:HTML2Text
classifiers	html2text/setup.py	/^   classifiers=[$/;"	v
clear_and_exit	fast_troll/fat_troll	/^function clear_and_exit()$/;"	f
close	html2text/html2text.py	/^    def close(self):$/;"	m	class:HTML2Text
codecs	html2text/html2text.py	/^import optparse, re, sys, codecs, types$/;"	i
codecs	html2text/test/run_tests.py	/^import codecs$/;"	i
description	html2text/setup.py	/^   description = "Turn HTML into equivalent Markdown-structured text.",$/;"	v
detect	html2text/html2text.py	/^                    from chardet import detect$/;"	i
do_backup	fast_troll/fat_troll	/^function do_backup()$/;"	f
do_lokcd	fast_troll/fat_troll	/^function do_lokcd()$/;"	f
do_ls	fast_troll/fat_troll	/^function do_ls()$/;"	f
do_wallpaper_change	fast_troll/fat_troll	/^function do_wallpaper_change()$/;"	f
download	bbid.py	/^def download(pool_sema: threading.Semaphore, img_sema: threading.Semaphore, url: str, output_dir: str, limit: int):$/;"	f
download_history	bbid.py	/^        download_history = open(os.path.join(output_dir, 'download_history.pickle'), 'rb')$/;"	v
drop_last	html2text/html2text.py	/^    def drop_last(self, nLetters):$/;"	m	class:HTML2Text
dumb_css_parser	html2text/html2text.py	/^def dumb_css_parser(data):$/;"	f
dumb_property_dict	html2text/html2text.py	/^def dumb_property_dict(style):$/;"	f
element_style	html2text/html2text.py	/^def element_style(attrs, style_def, parent_style):$/;"	f
enc	html2text/html2text.py	/^                    from feedparser import _getCharacterEncoding as enc$/;"	i
entityref	html2text/html2text.py	/^    def entityref(self, c):$/;"	m	class:HTML2Text
escape_md	html2text/html2text.py	/^def escape_md(text):$/;"	f
escape_md_section	html2text/html2text.py	/^def escape_md_section(text, snob=False):$/;"	f
feed	html2text/html2text.py	/^    def feed(self, data):$/;"	m	class:HTML2Text
fetch_images_from_keyword	bbid.py	/^def fetch_images_from_keyword(pool_sema: threading.Semaphore, img_sema: threading.Semaphore, keyword: str,$/;"	f
find_packages	html2text/setup.py	/^from setuptools import setup, find_packages$/;"	i
flags	html2text/html2text.py	/^    flags=re.VERBOSE)$/;"	v	class:HTML2Text
get_baseline	html2text/test/run_tests.py	/^def get_baseline(fn):$/;"	f
get_baseline_name	html2text/test/run_tests.py	/^def get_baseline_name(fn):$/;"	f
get_dump_name	html2text/test/run_tests.py	/^def get_dump_name(fn, suffix):$/;"	f
glob	html2text/test/run_tests.py	/^import glob$/;"	i
google_fixed_width_font	html2text/html2text.py	/^def google_fixed_width_font(style):$/;"	f
google_has_height	html2text/html2text.py	/^def google_has_height(style):$/;"	f
google_list_style	html2text/html2text.py	/^def google_list_style(style):$/;"	f
google_nest_count	html2text/html2text.py	/^    def google_nest_count(self, style):$/;"	m	class:HTML2Text
google_text_emphasis	html2text/html2text.py	/^def google_text_emphasis(style):$/;"	f
h.xdvi2xfx4hkq	html2text/test/GoogleDocMassDownload.html	/^      <A name="h.xdvi2xfx4hkq">$/;"	a
h.xdvi2xfx4hkq	html2text/test/GoogleDocSaved.html	/^      <A name="h.xdvi2xfx4hkq">$/;"	a
handle	html2text/html2text.py	/^    def handle(self, data):$/;"	m	class:HTML2Text
handle_charref	html2text/html2text.py	/^    def handle_charref(self, c):$/;"	m	class:HTML2Text
handle_data	html2text/html2text.py	/^    def handle_data(self, data):$/;"	m	class:HTML2Text
handle_emphasis	html2text/html2text.py	/^    def handle_emphasis(self, start, tag_style, parent_style):$/;"	m	class:HTML2Text
handle_endtag	html2text/html2text.py	/^    def handle_endtag(self, tag):$/;"	m	class:HTML2Text
handle_entityref	html2text/html2text.py	/^    def handle_entityref(self, c):$/;"	m	class:HTML2Text
handle_starttag	html2text/html2text.py	/^    def handle_starttag(self, tag, attrs):$/;"	m	class:HTML2Text
handle_tag	html2text/html2text.py	/^    def handle_tag(self, tag, attrs, start):$/;"	m	class:HTML2Text
has_key	html2text/html2text.py	/^def has_key(x, y):$/;"	f
hashlib	bbid.py	/^import hashlib$/;"	i
help	bbid.py	/^                        help='Any query based filters you want to append when searching for images, e.g. +filterui:license-L1',$/;"	v
hn	html2text/html2text.py	/^def hn(tag):$/;"	f
html	html2text/html2text.py	/^    import html.entities as htmlentitydefs$/;"	i
html	html2text/html2text.py	/^    import html.parser as HTMLParser$/;"	i
html2text	html2text/html2text.py	/^def html2text(html, baseurl=''):$/;"	f
html2text	html2text/test/run_tests.py	/^import html2text$/;"	i
htmlentitydefs	html2text/html2text.py	/^    import html.entities as htmlentitydefs$/;"	i
htmlentitydefs	html2text/html2text.py	/^    import htmlentitydefs$/;"	i
image_md5s	bbid.py	/^        image_md5s = pickle.load(download_history)$/;"	v
image_md5s	bbid.py	/^image_md5s = {}$/;"	v
img_sema	bbid.py	/^    img_sema = threading.Semaphore()$/;"	v
imghdr	bbid.py	/^import imghdr$/;"	i
in_progress	bbid.py	/^in_progress = 0$/;"	v
include_package_data	html2text/setup.py	/^   include_package_data=True,$/;"	v
init	fast_troll/fat_troll	/^function init()$/;"	f
inputFile	bbid.py	/^            inputFile = open(args.search_file)$/;"	v
license	html2text/setup.py	/^   license='GNU GPL 3',$/;"	v
list_numbering_start	html2text/html2text.py	/^def list_numbering_start(attrs):$/;"	f
main	fast_troll/fat_troll	/^function main()$/;"	f
main	html2text/html2text.py	/^def main():$/;"	f
md_chars_matcher	html2text/html2text.py	/^md_chars_matcher = re.compile(r"([\\\\\\[\\]\\(\\)])")$/;"	v
md_chars_matcher_all	html2text/html2text.py	/^md_chars_matcher_all = re.compile(r"([`\\*_{}\\[\\]\\(\\)#!])")$/;"	v
name	html2text/setup.py	/^   name = "html2text",$/;"	v
name2cp	html2text/html2text.py	/^def name2cp(k):$/;"	f
o	html2text/html2text.py	/^    def o(self, data, puredata=0, force=0):$/;"	m	class:HTML2Text
onlywhite	html2text/html2text.py	/^def onlywhite(line):$/;"	f
optparse	html2text/html2text.py	/^import optparse, re, sys, codecs, types$/;"	i
optwrap	html2text/html2text.py	/^    def optwrap(self, text):$/;"	m	class:HTML2Text
ordered_list_matcher	html2text/html2text.py	/^ordered_list_matcher = re.compile(r'\\d+\\.\\s')$/;"	v
os	bbid.py	/^import os$/;"	i
os	html2text/test/run_tests.py	/^import os$/;"	i
output_dir	bbid.py	/^        output_dir = args.output$/;"	v
output_dir	bbid.py	/^output_dir = '.\/bing'  # default output dir$/;"	v
output_dir_origin	bbid.py	/^    output_dir_origin = output_dir$/;"	v
output_sub_dir	bbid.py	/^            output_sub_dir = os.path.join(output_dir_origin, keyword.strip().replace(' ', '_'))$/;"	v
outtextf	html2text/html2text.py	/^    def outtextf(self, s):$/;"	m	class:HTML2Text
p	html2text/html2text.py	/^    def p(self):$/;"	m	class:HTML2Text
packages	html2text/setup.py	/^   packages=find_packages(),$/;"	v
parse	bbid.py	/^import urllib.parse$/;"	i
parser	bbid.py	/^    parser = argparse.ArgumentParser(description='Bing image bulk downloader')$/;"	v
pbr	html2text/html2text.py	/^    def pbr(self):$/;"	m	class:HTML2Text
pickle	bbid.py	/^import pickle$/;"	i
pool_sema	bbid.py	/^    pool_sema = threading.BoundedSemaphore(args.threads)$/;"	v
posixpath	bbid.py	/^import posixpath$/;"	i
previousIndex	html2text/html2text.py	/^    def previousIndex(self, attrs):$/;"	m	class:HTML2Text
print_conditions	html2text/test/run_tests.py	/^def print_conditions(mode, *args, **kwargs):$/;"	f
print_result	html2text/test/run_tests.py	/^def print_result(fn, mode, result, actual):$/;"	f
py_modules	html2text/setup.py	/^   py_modules=['html2text'],$/;"	v
r_unescape	html2text/html2text.py	/^    r_unescape = re.compile(r"&(#?[xX]?(?:[0-9a-fA-F]+|\\w{1,8}));")$/;"	v	class:HTML2Text
re	bbid.py	/^import re$/;"	i
re	html2text/html2text.py	/^import optparse, re, sys, codecs, types$/;"	i
re	html2text/test/run_tests.py	/^import re$/;"	i
remove_prev_lsound	fast_troll/fat_troll	/^function remove_prev_lsound()$/;"	f
replaceEntities	html2text/html2text.py	/^    def replaceEntities(self, s):$/;"	m	class:HTML2Text
request	bbid.py	/^import urllib.request$/;"	i
required	bbid.py	/^                        required=False)$/;"	v
retrieve_shell	fast_troll/fat_troll	/^function retrieve_shell()$/;"	f
retrieve_shell	fast_troll/rm_troll.sh	/^function retrieve_shell()$/;"	f
rm_to_ohmyzsh	fast_troll/rm_troll.sh	/^function rm_to_ohmyzsh()$/;"	f
rm_to_zsh	fast_troll/rm_troll.sh	/^function rm_to_zsh()$/;"	f
run_all_tests	html2text/test/run_tests.py	/^def run_all_tests():$/;"	f
setup	html2text/setup.py	/^from setuptools import setup, find_packages$/;"	i
signal	bbid.py	/^import signal$/;"	i
skipwrap	html2text/html2text.py	/^def skipwrap(para):$/;"	f
slash_chars	html2text/html2text.py	/^slash_chars = r'\\`*_{}[]()#+-.!'$/;"	v
socket	bbid.py	/^import socket$/;"	i
soft_br	html2text/html2text.py	/^    def soft_br(self):$/;"	m	class:HTML2Text
subprocess	html2text/test/run_tests.py	/^import subprocess$/;"	i
sys	html2text/html2text.py	/^import optparse, re, sys, codecs, types$/;"	i
sys	html2text/setup.py	/^import sys$/;"	i
sys	html2text/test/run_tests.py	/^import sys$/;"	i
test_command	html2text/test/run_tests.py	/^def test_command(fn, *args):$/;"	f
test_module	html2text/test/run_tests.py	/^def test_module(fn, google_doc=False, **kwargs):$/;"	f
threading	bbid.py	/^import threading$/;"	i
time	bbid.py	/^import time$/;"	i
tried_urls	bbid.py	/^        tried_urls = []$/;"	v
tried_urls	bbid.py	/^        tried_urls = pickle.load(download_history)$/;"	v
tried_urls	bbid.py	/^tried_urls = []$/;"	v
types	html2text/html2text.py	/^import optparse, re, sys, codecs, types$/;"	i
unescape	html2text/html2text.py	/^    def unescape(self, s):$/;"	m	class:HTML2Text
unescape	html2text/html2text.py	/^def unescape(s, unicode_snob=False):$/;"	f
unifiable	html2text/html2text.py	/^unifiable = {'rsquo':"'", 'lsquo':"'", 'rdquo':'"', 'ldquo':'"',$/;"	v
unifiable_n	html2text/html2text.py	/^unifiable_n = {}$/;"	v
unknown_decl	html2text/html2text.py	/^    def unknown_decl(self, data): pass$/;"	m	class:HTML2Text
unordered_list_matcher	html2text/html2text.py	/^unordered_list_matcher = re.compile(r'[-\\*\\+]\\s')$/;"	v
url	html2text/setup.py	/^   url='http:\/\/www.aaronsw.com\/2002\/html2text\/',$/;"	v
urllib	bbid.py	/^import urllib.parse$/;"	i
urllib	bbid.py	/^import urllib.request$/;"	i
urllib	html2text/html2text.py	/^    import urllib$/;"	i
urllib	html2text/html2text.py	/^    import urllib.parse as urlparse$/;"	i
urllib	html2text/html2text.py	/^    import urllib.request as urllib$/;"	i
urlopenheader	bbid.py	/^urlopenheader = {'User-Agent': 'Mozilla\/5.0 (X11; Fedora; Linux x86_64; rv:94.0) Gecko\/20100101 Firefox\/94.0'}$/;"	v
urlparse	html2text/html2text.py	/^    import urllib.parse as urlparse$/;"	i
urlparse	html2text/html2text.py	/^    import urlparse$/;"	i
version	html2text/setup.py	/^   version = "3.200.3",$/;"	v
wrap	html2text/html2text.py	/^try: from textwrap import wrap$/;"	i
wrapwrite	html2text/html2text.py	/^def wrapwrite(text):$/;"	f
zip_safe	html2text/setup.py	/^   zip_safe=False,$/;"	v
